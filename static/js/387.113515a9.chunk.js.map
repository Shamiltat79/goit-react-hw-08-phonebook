{"version":3,"file":"static/js/387.113515a9.chunk.js","mappings":"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","sources":["components/ContactItem/ContactItemStyled.jsx","components/ContactItem/ContactItem.jsx","redux/contacts/selectors.js","components/ContactList/ContactListStyled.jsx","components/ContactList/ContactList.jsx","components/ContactFilter/ContactFilterStyled.jsx","components/ContactFilter/ContactFilter.jsx","components/ContactForm/contactFormStyled.jsx","components/ContactForm/contactForm.jsx","components/App/AppStyled.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ContactItem = styled.li`\n  margin-top: 10px;\n  margin-bottom: 10px;\n  margin-right: auto;\n  margin-left: auto;\n  width: 600px;\n`\nexport const DeleteButton = styled.button`\n width: 120px;\n height: 30px;\n  margin-top: 15px;\n  margin-bottom: 15px;\n  margin-right: 20px;\n  margin-left: 20px;\n  font-weight: 600;\n  border-radius: 4px;\n  border-color: #716f6f;\n`","import { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"redux/contacts/operations\";\n\nimport { ContactItem, DeleteButton } from \"./ContactItemStyled\";\n\nexport const Contacts = ({ id, name, number }) => {\n    const dispatch= useDispatch();\n    const handleDelete = () => dispatch(deleteContact(id));\n\n    return (\n        <ContactItem>\n            <p>{name} : {number}  <DeleteButton onClick={handleDelete}>Delete</DeleteButton></p>\n            \n            \n        </ContactItem>\n    )\n};","\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectDeleteId = state => state.contacts.deleteId;\n\n\n","import styled from \"styled-components\";\n\nexport const StyledContactList = styled.ul`\n  font-size: 24px;\n  font-weight: 700;\n`","import { useSelector } from \"react-redux\";\nimport { Contacts} from \"components/ContactItem/ContactItem\";\nimport {selectContacts, selectFilter,} from \"redux/contacts/selectors\";\nimport { StyledContactList } from \"./ContactListStyled\";\n\n\n\n\n\nexport const ContactList = () => {\nconst contacts = useSelector(selectContacts);  \nconst filter = useSelector(selectFilter);\n\n\n\n\n\nconst getVisibleContacts = () => {\n    const normalizedContact = filter.toLowerCase();\n    // console.log(contacts);\n    return contacts.filter(({name}) => name.toLowerCase().includes(normalizedContact));\n    \n};\n\nconst visibleContacts = getVisibleContacts();\n\nreturn(\n<StyledContactList>\n    {visibleContacts.map(contact => (<Contacts key={contact.id} id={contact.id} name={contact.name} number={contact.number}/>))}\n    \n</StyledContactList>\n)\n};","import styled from \"styled-components\";\n\n\nexport const FilterContainer = styled.div`\n display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 500px;\n  text-align: center;\n  margin: auto;\n  /* padding: 24px; */\nbackground-color: orangered;\n`\n\nexport const StyledInput = styled.input`\n  font-size: 20px;\n  margin-bottom: 15px;\n  border-radius: 6px;\n  /* border-color: red; */\n  width: 400px;\n  /* outline: red; */\n  :focus{\n    outline: none;\n  }\n`\nexport const StyledLabel = styled.label`\nwidth: 100%;\ntext-align: center;\n   margin-top: 15px;\n  margin-bottom: 15px;\n  font-weight: 600;\n  font-size: 20px;\n`","import { useSelector, useDispatch } from \"react-redux\";\nimport { setFilterValue} from \"redux/contacts/filterSlice\";\nimport { selectFilter } from \"redux/contacts/selectors\";\nimport { FilterContainer, StyledInput, StyledLabel } from \"./ContactFilterStyled\";\n\nexport const ContactFilter = () => {\n    const dispatch = useDispatch();\n    const filterValue = useSelector(selectFilter);\n    const handleFilter = evt => dispatch(setFilterValue(evt.target.value)); \n    return(\n<FilterContainer>\n<StyledLabel>Find contacts by name\n    <StyledInput \n    type=\"text\"\n    name=\"filter\"\n    value={filterValue}\n    onChange={handleFilter} \n    />\n    \n</StyledLabel>\n</FilterContainer>\n    );\n}","import styled from \"styled-components\";\nimport { Form, Field, ErrorMessage} from 'formik';\n\nexport const FormWrapper = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 400px;\n  text-align: center;\n  margin: auto;\n  padding: 24px;\n   \n  \nbutton {\n width: 120px;\n height: 30px;\n  margin-top: 15px;\n  margin-bottom: 15px;\n  font-weight: 600;\n  border-radius: 4px;\n  border-color: #716f6f;\n}\n \nlabel {\n    width: 100%;\ntext-align: left;\n   margin-top: 15px;\n  margin-bottom: 15px;\n  font-weight: 600;\n  font-size: 20px;}\n  `\nexport const StyledInput = styled(Field)`\n  font-size: 20px;\n  margin-bottom: 15px;\n  border-radius: 6px;\n  border-color: white;\n  width: 100%;\n  outline: none;\n  :focus{\n    outline: none;\n  }\n`\nexport const StyledErrorMessage = styled(ErrorMessage)`\ncolor: black;\n`;","import { Formik, } from \"formik\";\nimport toast, { Toaster } from \"react-hot-toast\";\n\nimport * as Yup from 'yup';\nimport { useSelector, useDispatch } from \"react-redux\";\n\n\nimport { addContact } from \"redux/contacts/operations\";\nimport { selectContacts } from \"redux/contacts/selectors\";\nimport { FormWrapper, StyledInput,  StyledErrorMessage  } from \"./contactFormStyled\";\n\nconst notifyError = message => toast.error(message);\nconst phoneRegular = /^((\\+[1-9]{1,4}[ -]?)|(\\([0-9]{2,3}\\)[ -]?)|([0-9]{2,4})[ -]?)*?[0-9]{3,4}[ -]?[0-9]{3,4}$/;\nconst formSchema = Yup.object().shape({\n    name: Yup.string()\n      .min(2, 'Too Short!')\n      .max(50, 'TooLong!')\n      .required('Required!'),\n    number: Yup.string()  \n     .matches(phoneRegular, 'Phone number is not valid')\n    .required('Required!'),\n  });\n\nexport const ContactForm = () => {\nconst contacts = useSelector(selectContacts);\nconst dispatch = useDispatch();\nconst handleAddContact = (name, number) => {\n  dispatch(\n    addContact(\n      {name: name,\n       number: number,\n      \n    }\n       ))\n};\n\n\nreturn (\n    <Formik\n    initialValues={{name: '', number: '',}}\n    validationSchema = {formSchema}\n    onSubmit = {(values, actions) => {const { name, number } = values;\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return notifyError(`${name} is already in contacts.`);\n    }\n\n    handleAddContact(name, number);\n    console.log(values);\n    actions.resetForm();}}>\n<FormWrapper>\n <label>Name\n   <StyledInput         \n      type=\"text\"\n      name=\"name\"  \n      placeholder=\"Please enter name...\"   \n          />\n        <StyledErrorMessage name=\"name\" component=\"div\" /> \n </label>\n <label>Number\n   <StyledInput         \n      type=\"tel\"\n      name=\"number\" \n      placeholder=\"Please enter number...\"      \n          />\n          <StyledErrorMessage name=\"number\" component=\"div\" /> \n </label>\n            <button type=\"submit\">Add contact</button>\n            <Toaster position=\"top-left\" toastOptions={{ duration: 3000 }} />\n</FormWrapper>\n    </Formik>\n)\n\n  };","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 500px;\n  /* height: 700px; */\n  text-align: center;\n  margin: auto;\n  margin-bottom: 25px;\n  \n  background-color: orangered;\n  `\n\nexport const Title = styled.h1`\nfont-size: 32px;\nfont-weight: 700;\npadding: 15px;\nmargin-right: auto;\nmargin-left: auto;\n`\nexport const TitleWrapper = styled.div`\nwidth: 700px;\n  /* height: 700px; */\n  text-align: center;\n  margin: auto;\n  margin-bottom: 25px;\n  \n  background-color: orangered;\n`","\n\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactFilter } from 'components/ContactFilter/ContactFilter';\nimport { ContactForm } from 'components/ContactForm/contactForm';\nimport { Container } from 'components/App/AppStyled';\n\nconst ContactsPage = () => {\n  \n    \n  \n    return (<>\n      <Container>\n        <ContactForm/>\n        <ContactFilter/>\n        \n      </Container>\n      <ContactList/>\n      </>\n    );\n  };\n  \n  export default ContactsPage;\n\n//   <div>\n//         <Phonebook>\n//           <UpperBox>\n//             {!isLoading && <SecondTitle>Contacts</SecondTitle>}\n//             {isLoading && !error && <SecondTitle>Loading...</SecondTitle>}\n//             <ButtonAdd type=\"button\" onClick={handleOpenAddForm}>\n//               +\n//             </ButtonAdd>\n//           </UpperBox>\n//           {isAddFormOpen && <ContactForm />}\n//           <Headers>\n//             <Total>Total: {contacts?.length}</Total>\n//             <Name>Name:</Name>\n//             <Number>Number:</Number>\n//             <Filter />\n//           </Headers>\n//           <div>\n//             {contacts?.length < 1 && !isLoading ? (\n//               <Notification message={'Phonebook is empty!'} />\n//             ) : (\n//               <ContactList />\n//             )}\n//           </div>\n//           <GlobalStyle />\n//         </Phonebook>\n//         {showModal && (\n//           <Modal>\n//             <DeleteContactWarning id={deleteId} />\n//           </Modal>\n//         )}\n//       </div>"],"names":["ContactItem","styled","DeleteButton","Contacts","id","name","number","dispatch","useDispatch","onClick","deleteContact","selectContacts","state","contacts","items","selectFilter","filter","StyledContactList","ContactList","useSelector","visibleContacts","normalizedContact","toLowerCase","includes","getVisibleContacts","map","contact","FilterContainer","StyledInput","StyledLabel","ContactFilter","filterValue","type","value","onChange","evt","setFilterValue","target","FormWrapper","Form","Field","StyledErrorMessage","ErrorMessage","formSchema","Yup","shape","min","max","required","matches","ContactForm","initialValues","validationSchema","onSubmit","values","actions","message","find","toast","addContact","handleAddContact","console","log","resetForm","placeholder","component","position","toastOptions","duration","Container"],"sourceRoot":""}